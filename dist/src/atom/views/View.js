"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 *
 */
var ts_disposables_1 = require('ts-disposables');
/* tslint:disable:no-invalid-this */
var View = (function (_super) {
    __extends(View, _super);
    function View(root) {
        _super.call(this);
        this._root = root;
    }
    Object.defineProperty(View.prototype, "root", {
        get: function () { return this._root; },
        enumerable: true,
        configurable: true
    });
    View.prototype.appendTo = function (node) {
        node.appendChild(this.root);
    };
    View.prototype.scrollBottom = function (element, value) {
        if (typeof element === 'number') {
            value = element;
            element = undefined;
        }
        if (element == null) {
            element = this._root;
        }
        if (value) {
            element.scrollTop = value - element.clientHeight;
            return;
        }
        else {
            return element.scrollTop + element.clientHeight;
        }
    };
    View.prototype.scrollDown = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = element.scrollTop + (window.innerHeight / 20);
        return;
    };
    View.prototype.scrollUp = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = element.scrollTop - (window.innerHeight / 20);
        return;
    };
    View.prototype.scrollToTop = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = 0;
        return;
    };
    View.prototype.scrollToBottom = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = element.scrollHeight;
        return;
    };
    View.prototype.pageUp = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = element.scrollTop + element.clientHeight;
        return;
    };
    View.prototype.pageDown = function (element) {
        if (element == null) {
            element = this._root;
        }
        element.scrollTop = element.scrollTop + element.clientHeight;
        return;
    };
    View.prototype.isVisible = function (element) {
        if (element == null) {
            element = this._root;
        }
        return !this.isHidden(element);
    };
    View.prototype.isHidden = function (element) {
        if (element == null) {
            element = this._root;
        }
        var style = element.style;
        if (style.display === 'none' || document.body.contains(element)) {
            return true;
        }
        else if (style.display) {
            return false;
        }
        else {
            return getComputedStyle(element).display === 'none';
        }
    };
    View.prototype.isDisabled = function (element) {
        if (element == null) {
            element = this._root;
        }
        return !!element.getAttribute('disabled');
    };
    View.prototype.enable = function (element) {
        if (element == null) {
            element = this._root;
        }
        return element.removeAttribute('disabled');
    };
    View.prototype.disable = function (element) {
        if (element == null) {
            element = this._root;
        }
        return element.setAttribute('disabled', 'disabled');
    };
    View.prototype.hasFocus = function (element) {
        if (element == null) {
            element = this._root;
        }
        return document.activeElement === element;
    };
    View.prototype.show = function (element) {
        if (element == null) {
            element = this._root;
        }
        if (element.style.display === 'none') {
            element.style.display = '';
        }
    };
    View.prototype.hide = function (element) {
        if (element == null) {
            element = this._root;
        }
        if (element.style.display === '') {
            element.style.display = 'none';
        }
    };
    View.prototype.empty = function (element) {
        if (element == null) {
            element = this._root;
        }
        /* tslint:disable-next-line:no-inner-html */
        element.innerHTML = '';
    };
    return View;
}(ts_disposables_1.DisposableBase));
exports.View = View;
//# sourceMappingURL=data:application/json;base64,